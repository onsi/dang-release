#!/bin/bash

RUN_DIR=/var/vcap/sys/run/etcd
LOG_DIR=/var/vcap/sys/log/etcd
WORK_DIR=/var/vcap/store/etcd

PIDFILE=$RUN_DIR/etcd.pid

PKG=/var/vcap/packages/etcd

mkdir -p /var/vcap/sys/log/monit
exec 1>> /var/vcap/sys/log/monit/etcd.out.log
exec 2>> /var/vcap/sys/log/monit/etcd.err.log

case $1 in

  start)
    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $WORK_DIR

    chown -R vcap:vcap $RUN_DIR
    chown -R vcap:vcap $LOG_DIR
    chown -R vcap:vcap $WORK_DIR

    echo $$ > $PIDFILE

    <% my_ip = spec.networks.send(properties.network_name).ip %>

    exec chpst -u vcap:vcap $PKG/etcd -snapshot -data-dir=$WORK_DIR \
        -addr=<%= my_ip %>:4001 \
        -peer-addr=<%= my_ip %>:7001 \
        -name=<%= "#{name}-#{spec.index}" %> \
        <%
          # etcd crashes if all peers are missing. for the first deploy,
          # we need at least one instance to come up without trying to
          # connect to any peers.
        %> \
        <% if p("etcd.machines").length > 1 %> \
          <% if p("etcd.machines").first != my_ip %> \
        -peers=<%= p("etcd.machines").reject { |ip| ip == my_ip }.map { |m| "#{m}:7001" }.join(",") %> \
          <% end %> \
        <% end %> \
        -peer-heartbeat-timeout=<%= p("etcd.heartbeat_interval_in_milliseconds") %>\
        -peer-election-timeout=<%= p("etcd.election_timeout_in_milliseconds") %>\
        1>>$LOG_DIR/etcd.stdout.log \
        2>>$LOG_DIR/etcd.stderr.log
    ;;

  stop)
    kill $(cat $PIDFILE)

    ;;

  *)
    echo "Usage: etcd_ctl {start|stop}"

    ;;

esac
